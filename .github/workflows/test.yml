name: Auto Merge PR on Specific File Update

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Check for workflow modifications
      id: check-workflow-modifications
      run: |
        PR_BASE_SHA=$(jq -r ".pull_request.base.sha" $GITHUB_EVENT_PATH)
        PR_HEAD_SHA=$(jq -r ".pull_request.head.sha" $GITHUB_EVENT_PATH)
        # Check if the .github/workflows directory was modified
        if git diff --name-only $PR_BASE_SHA $PR_HEAD_SHA -- .github/workflows | grep -q '.'; then
            echo "Workflow files were modified."
            echo "::set-output name=workflow_modified::true"
        else
            echo "Workflow files were not modified."
            echo "::set-output name=workflow_modified::false"
        fi
    - name: Halt workflow if it was modified
      if: steps.check-workflow-modifications.outputs.workflow_modified == 'true'
      run: |
        echo "Halting workflow because .github/workflows was modified."
        exit 1
    - name: Check for file modification and content
      id: file-checks
      run: |
        FILE="users.yml"
        FORBIDDEN_WORDS=("admin" "write")
        PR_BASE_SHA=$(jq -r ".pull_request.base.sha" $GITHUB_EVENT_PATH)
        PR_HEAD_SHA=$(jq -r ".pull_request.head.sha" $GITHUB_EVENT_PATH)
        
        # Check if only the target file was modified
        MODIFIED_FILES=$(git diff --name-only $PR_BASE_SHA $PR_HEAD_SHA)
        if [ "$MODIFIED_FILES" == "$FILE" ]; then
            echo "Only the target file was modified."
            echo "::set-output name=only_target_file_modified::true"
        else
            echo "More than the target file was modified."
            echo "::set-output name=only_target_file_modified::false"
            exit 0 # No need to check further if more than the target file is modified
        fi
        
        # Check if the changes to the file are only additions and search for forbidden words
        CHANGES=$(git diff $PR_BASE_SHA $PR_HEAD_SHA -- $FILE)
        if echo "$CHANGES" | grep -v '^+' | grep -q '^[-]'; then
            echo "Changes to the file are not only additions."
            echo "::set-output name=only_additions::false"
        else
            echo "Changes to the file are only additions."
            echo "::set-output name=only_additions::true"
        fi

        # Check for forbidden words in added lines only
        FORBIDDEN_FOUND=false
        ADDED_LINES=$(git diff $PR_BASE_SHA $PR_HEAD_SHA -- $FILE | grep '^+' | grep -v '^\+\+\+' )
        for word in "${FORBIDDEN_WORDS[@]}"; do
        if echo "$ADDED_LINES" | grep -qi $word; then
            FORBIDDEN_FOUND=true
            break
        fi
        done


        if [ "$FORBIDDEN_FOUND" = true ]; then
            echo "Forbidden words found."
            echo "::set-output name=forbidden_words_found::true"
        else
            echo "No forbidden words found."
            echo "::set-output name=forbidden_words_found::false"
        fi
    - name: Merge PR
      if: steps.file-checks.outputs.only_target_file_modified == 'true' && steps.file-checks.outputs.only_additions == 'true' && steps.file-checks.outputs.forbidden_words_found == 'false'
      uses: pascalgn/automerge-action@v0.16.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MERGE_METHOD: squash
        MERGE_COMMIT_MESSAGE: "PR auto merge"
        MERGE_LABELS: ""
